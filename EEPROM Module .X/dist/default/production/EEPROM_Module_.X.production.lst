

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jun 16 19:29:27 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.41
    12                           ; Generated 25/01/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  000B                     _INTCONbits	set	11
   106  0008                     _PORTD	set	8
   107  005F                     _GIE	set	95
   108  0030                     _RB0	set	48
   109  0033                     _RB3	set	51
   110  0032                     _RB2	set	50
   111  0031                     _RB1	set	49
   112  0088                     _TRISD	set	136
   113  0086                     _TRISB	set	134
   114  010C                     _EEDATA	set	268
   115  010D                     _EEADR	set	269
   116  018D                     _EECON2	set	397
   117  018C                     _EECON1bits	set	396
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  07FC                     start_initialization:	
   123  07FC                     __initialization:	
   124  07FC                     end_of_initialization:	
   125                           ;End of C runtime variable initialization code
   126                           
   127  07FC                     __end_of__initialization:	
   128  07FC  0183               	clrf	3
   129  07FD  120A  118A  2F6E   	ljmp	_main	;jump to C main() function
   130                           
   131                           	psect	cstackCOMMON
   132  0070                     __pcstackCOMMON:	
   133  0070                     ?_write_EEPROM:	
   134  0070                     ?_read_EEPROM:	
   135                           ; 1 bytes @ 0x0
   136                           
   137  0070                     ??_read_EEPROM:	
   138                           ; 1 bytes @ 0x0
   139                           
   140  0070                     ?_main:	
   141                           ; 1 bytes @ 0x0
   142                           
   143  0070                     write_EEPROM@data:	
   144                           ; 1 bytes @ 0x0
   145                           
   146                           
   147                           ; 1 bytes @ 0x0
   148  0070                     	ds	1
   149  0071                     ??_write_EEPROM:	
   150  0071                     write_EEPROM@address:	
   151                           ; 1 bytes @ 0x1
   152                           
   153  0071                     read_EEPROM@address:	
   154                           ; 1 bytes @ 0x1
   155                           
   156                           
   157                           ; 1 bytes @ 0x1
   158  0071                     	ds	1
   159  0072                     write_EEPROM@GIE_State:	
   160  0072                     read_EEPROM@data:	
   161                           ; 1 bytes @ 0x2
   162                           
   163                           
   164                           ; 1 bytes @ 0x2
   165  0072                     	ds	1
   166  0073                     ??_main:	
   167                           
   168                           ; 1 bytes @ 0x3
   169  0073                     	ds	3
   170  0076                     main@i:	
   171                           
   172                           ; 1 bytes @ 0x6
   173  0076                     	ds	1
   174  0077                     main@address:	
   175                           
   176                           ; 1 bytes @ 0x7
   177  0077                     	ds	1
   178                           
   179                           	psect	maintext
   180  076E                     __pmaintext:	
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 21 in file "main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;  i               1    6[COMMON] unsigned char 
   191 ;;  address         1    7[COMMON] unsigned char 
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, status,2, status,0, pclath, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : B00/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   201 ;;      Params:         0       0       0       0       0
   202 ;;      Locals:         2       0       0       0       0
   203 ;;      Temps:          3       0       0       0       0
   204 ;;      Totals:         5       0       0       0       0
   205 ;;Total ram usage:        5 bytes
   206 ;; Hardware stack levels required when called:    1
   207 ;; This function calls:
   208 ;;		_read_EEPROM
   209 ;;		_write_EEPROM
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           
   216                           ;psect for function _main
   217  076E                     _main:	
   218                           
   219                           ;main.c: 22: TRISB=0x0F;
   220                           
   221                           ;incstack = 0
   222                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   223  076E  300F               	movlw	15
   224  076F  1683               	bsf	3,5	;RP0=1, select bank1
   225  0770  1303               	bcf	3,6	;RP1=0, select bank1
   226  0771  0086               	movwf	6	;volatile
   227                           
   228                           ;main.c: 23: TRISD=0x00;
   229  0772  0188               	clrf	8	;volatile
   230                           
   231                           ;main.c: 24: PORTD=0x00;
   232  0773  1283               	bcf	3,5	;RP0=0, select bank0
   233  0774  1303               	bcf	3,6	;RP1=0, select bank0
   234  0775  0188               	clrf	8	;volatile
   235                           
   236                           ;main.c: 25: uint8_t address = 0 ;
   237  0776  01F7               	clrf	main@address
   238  0777                     l630:	
   239                           ;main.c: 26: while (1) {
   240                           
   241                           
   242                           ;main.c: 27: if (RB1)
   243  0777  1283               	bcf	3,5	;RP0=0, select bank0
   244  0778  1303               	bcf	3,6	;RP1=0, select bank0
   245  0779  1C86               	btfss	6,1	;volatile
   246  077A  2F96               	goto	l638
   247                           
   248                           ;main.c: 28: {
   249                           ;main.c: 29: write_EEPROM(address++ , 3) ;
   250  077B  3003               	movlw	3
   251  077C  00F3               	movwf	??_main
   252  077D  0873               	movf	??_main,w
   253  077E  00F0               	movwf	write_EEPROM@data
   254  077F  0877               	movf	main@address,w
   255  0780  120A  118A  274B  120A  118A  	fcall	_write_EEPROM
   256  0785  3001               	movlw	1
   257  0786  00F3               	movwf	??_main
   258  0787  0873               	movf	??_main,w
   259  0788  07F7               	addwf	main@address,f
   260                           
   261                           ;main.c: 30: _delay((unsigned long)((500)*(4000000/4000.0)));
   262  0789  3003               	movlw	3
   263  078A  00F5               	movwf	??_main+2
   264  078B  308A               	movlw	138
   265  078C  00F4               	movwf	??_main+1
   266  078D  3055               	movlw	85
   267  078E  00F3               	movwf	??_main
   268  078F                     u217:	
   269  078F  0BF3               	decfsz	??_main,f
   270  0790  2F8F               	goto	u217
   271  0791  0BF4               	decfsz	??_main+1,f
   272  0792  2F8F               	goto	u217
   273  0793  0BF5               	decfsz	??_main+2,f
   274  0794  2F8F               	goto	u217
   275  0795  2F96               	nop2
   276  0796                     l638:	
   277                           
   278                           ;main.c: 31: }
   279                           ;main.c: 32: if (RB2)
   280  0796  1283               	bcf	3,5	;RP0=0, select bank0
   281  0797  1303               	bcf	3,6	;RP1=0, select bank0
   282  0798  1D06               	btfss	6,2	;volatile
   283  0799  2FB5               	goto	l646
   284                           
   285                           ;main.c: 33: {
   286                           ;main.c: 34: write_EEPROM(address++ , 5) ;
   287  079A  3005               	movlw	5
   288  079B  00F3               	movwf	??_main
   289  079C  0873               	movf	??_main,w
   290  079D  00F0               	movwf	write_EEPROM@data
   291  079E  0877               	movf	main@address,w
   292  079F  120A  118A  274B  120A  118A  	fcall	_write_EEPROM
   293  07A4  3001               	movlw	1
   294  07A5  00F3               	movwf	??_main
   295  07A6  0873               	movf	??_main,w
   296  07A7  07F7               	addwf	main@address,f
   297                           
   298                           ;main.c: 35: _delay((unsigned long)((500)*(4000000/4000.0)));
   299  07A8  3003               	movlw	3
   300  07A9  00F5               	movwf	??_main+2
   301  07AA  308A               	movlw	138
   302  07AB  00F4               	movwf	??_main+1
   303  07AC  3055               	movlw	85
   304  07AD  00F3               	movwf	??_main
   305  07AE                     u227:	
   306  07AE  0BF3               	decfsz	??_main,f
   307  07AF  2FAE               	goto	u227
   308  07B0  0BF4               	decfsz	??_main+1,f
   309  07B1  2FAE               	goto	u227
   310  07B2  0BF5               	decfsz	??_main+2,f
   311  07B3  2FAE               	goto	u227
   312  07B4  2FB5               	nop2
   313  07B5                     l646:	
   314                           
   315                           ;main.c: 36: }
   316                           ;main.c: 37: if (RB3)
   317  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   318  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   319  07B7  1D86               	btfss	6,3	;volatile
   320  07B8  2FD4               	goto	l654
   321                           
   322                           ;main.c: 38: {
   323                           ;main.c: 39: write_EEPROM(address++ , 7) ;
   324  07B9  3007               	movlw	7
   325  07BA  00F3               	movwf	??_main
   326  07BB  0873               	movf	??_main,w
   327  07BC  00F0               	movwf	write_EEPROM@data
   328  07BD  0877               	movf	main@address,w
   329  07BE  120A  118A  274B  120A  118A  	fcall	_write_EEPROM
   330  07C3  3001               	movlw	1
   331  07C4  00F3               	movwf	??_main
   332  07C5  0873               	movf	??_main,w
   333  07C6  07F7               	addwf	main@address,f
   334                           
   335                           ;main.c: 40: _delay((unsigned long)((500)*(4000000/4000.0)));
   336  07C7  3003               	movlw	3
   337  07C8  00F5               	movwf	??_main+2
   338  07C9  308A               	movlw	138
   339  07CA  00F4               	movwf	??_main+1
   340  07CB  3055               	movlw	85
   341  07CC  00F3               	movwf	??_main
   342  07CD                     u237:	
   343  07CD  0BF3               	decfsz	??_main,f
   344  07CE  2FCD               	goto	u237
   345  07CF  0BF4               	decfsz	??_main+1,f
   346  07D0  2FCD               	goto	u237
   347  07D1  0BF5               	decfsz	??_main+2,f
   348  07D2  2FCD               	goto	u237
   349  07D3  2FD4               	nop2
   350  07D4                     l654:	
   351                           
   352                           ;main.c: 41: }
   353                           ;main.c: 42: if (address==3)
   354  07D4  3003               	movlw	3
   355  07D5  0677               	xorwf	main@address,w
   356  07D6  1903               	btfsc	3,2
   357                           
   358                           ;main.c: 43: address=0;
   359  07D7  01F7               	clrf	main@address
   360                           
   361                           ;main.c: 44: if(RB0==1){
   362  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   363  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   364  07DA  1C06               	btfss	6,0	;volatile
   365  07DB  2F77               	goto	l630
   366                           
   367                           ;main.c: 45: for (uint8_t i=0 ; i<3 ; i++){
   368  07DC  01F6               	clrf	main@i
   369  07DD                     L1:	
   370  07DD  3003               	movlw	3
   371  07DE  0276               	subwf	main@i,w
   372  07DF  1803               	btfsc	3,0
   373  07E0  2F77               	goto	l630
   374                           
   375                           ;main.c: 46: PORTD= read_EEPROM(i);
   376  07E1  0876               	movf	main@i,w
   377  07E2  120A  118A  273A  120A  118A  	fcall	_read_EEPROM
   378  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   379  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   380  07E9  0088               	movwf	8	;volatile
   381                           
   382                           ;main.c: 47: _delay((unsigned long)((1000)*(4000000/4000.0)));
   383  07EA  3006               	movlw	6
   384  07EB  00F5               	movwf	??_main+2
   385  07EC  3013               	movlw	19
   386  07ED  00F4               	movwf	??_main+1
   387  07EE  30AD               	movlw	173
   388  07EF  00F3               	movwf	??_main
   389  07F0                     u247:	
   390  07F0  0BF3               	decfsz	??_main,f
   391  07F1  2FF0               	goto	u247
   392  07F2  0BF4               	decfsz	??_main+1,f
   393  07F3  2FF0               	goto	u247
   394  07F4  0BF5               	decfsz	??_main+2,f
   395  07F5  2FF0               	goto	u247
   396  07F6  2FF7               	nop2
   397  07F7  3001               	movlw	1
   398  07F8  00F3               	movwf	??_main
   399  07F9  0873               	movf	??_main,w
   400  07FA  07F6               	addwf	main@i,f
   401  07FB  2FDD               	goto	L1
   402  07FC                     __end_of_main:	
   403                           ;main.c: 49: }
   404                           ;main.c: 50: }
   405                           ;main.c: 52: }
   406                           ;main.c: 55: return;
   407                           
   408                           
   409                           	psect	text1
   410  074B                     __ptext1:	
   411 ;; *************** function _write_EEPROM *****************
   412 ;; Defined at:
   413 ;;		line 57 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;  address         1    wreg     unsigned char 
   416 ;;  data            1    0[COMMON] unsigned char 
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  address         1    1[COMMON] unsigned char 
   419 ;;  GIE_State       1    2[COMMON] unsigned char 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         1       0       0       0       0
   430 ;;      Locals:         2       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         3       0       0       0       0
   433 ;;Total ram usage:        3 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           
   443                           ;psect for function _write_EEPROM
   444  074B                     _write_EEPROM:	
   445                           
   446                           ;incstack = 0
   447                           ; Regs used in _write_EEPROM: [wreg+status,2]
   448                           ;write_EEPROM@address stored from wreg
   449  074B  00F1               	movwf	write_EEPROM@address
   450  074C                     l48:	
   451                           ;main.c: 59: uint8_t GIE_State ;
   452                           ;main.c: 60: while (EECON1bits.WR);
   453                           
   454  074C  1683               	bsf	3,5	;RP0=1, select bank3
   455  074D  1703               	bsf	3,6	;RP1=1, select bank3
   456  074E  188C               	btfsc	12,1	;volsfr
   457  074F  2F4C               	goto	l48
   458                           
   459                           ;main.c: 61: EEADR=address;
   460  0750  0871               	movf	write_EEPROM@address,w
   461  0751  1283               	bcf	3,5	;RP0=0, select bank2
   462  0752  1703               	bsf	3,6	;RP1=1, select bank2
   463  0753  008D               	movwf	13	;volatile
   464                           
   465                           ;main.c: 62: EEDATA=data;
   466  0754  0870               	movf	write_EEPROM@data,w
   467  0755  008C               	movwf	12	;volatile
   468                           
   469                           ;main.c: 63: EECON1bits.EEPGD=0;
   470  0756  1683               	bsf	3,5	;RP0=1, select bank3
   471  0757  1703               	bsf	3,6	;RP1=1, select bank3
   472  0758  138C               	bcf	12,7	;volsfr
   473                           
   474                           ;main.c: 64: EECON1bits.WREN=1;
   475  0759  150C               	bsf	12,2	;volsfr
   476                           
   477                           ;main.c: 65: GIE_State=GIE;
   478  075A  3000               	movlw	0
   479  075B  1B8B               	btfsc	11,7	;volatile
   480  075C  3001               	movlw	1
   481  075D  00F2               	movwf	write_EEPROM@GIE_State
   482                           
   483                           ;main.c: 66: INTCONbits.GIE=0;
   484  075E  138B               	bcf	11,7	;volatile
   485                           
   486                           ;main.c: 67: EECON2=0x55;
   487  075F  3055               	movlw	85
   488  0760  008D               	movwf	13	;volsfr
   489                           
   490                           ;main.c: 68: EECON2=0xAA;
   491  0761  30AA               	movlw	170
   492  0762  008D               	movwf	13	;volsfr
   493                           
   494                           ;main.c: 69: EECON1bits.WR=1;
   495  0763  148C               	bsf	12,1	;volsfr
   496                           
   497                           ;main.c: 70: GIE=GIE_State;
   498  0764  1C72               	btfss	write_EEPROM@GIE_State,0
   499  0765  2F68               	goto	u120
   500  0766  178B               	bsf	11,7	;volatile
   501  0767  2F69               	goto	l618
   502  0768                     u120:	
   503  0768  138B               	bcf	11,7	;volatile
   504  0769                     l618:	
   505                           
   506                           ;main.c: 71: EECON1bits.WREN=0;
   507  0769  1683               	bsf	3,5	;RP0=1, select bank3
   508  076A  1703               	bsf	3,6	;RP1=1, select bank3
   509  076B  110C               	bcf	12,2	;volsfr
   510                           
   511                           ;main.c: 72: EECON1bits.WR=0;
   512  076C  108C               	bcf	12,1	;volsfr
   513  076D  0008               	return
   514  076E                     __end_of_write_EEPROM:	
   515                           
   516                           	psect	text2
   517  073A                     __ptext2:	
   518 ;; *************** function _read_EEPROM *****************
   519 ;; Defined at:
   520 ;;		line 75 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  address         1    wreg     unsigned char 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  address         1    1[COMMON] unsigned char 
   525 ;;  data            1    2[COMMON] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      unsigned char 
   528 ;; Registers used:
   529 ;;		wreg
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         2       0       0       0       0
   537 ;;      Temps:          1       0       0       0       0
   538 ;;      Totals:         3       0       0       0       0
   539 ;;Total ram usage:        3 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _read_EEPROM
   550  073A                     _read_EEPROM:	
   551                           
   552                           ;incstack = 0
   553                           ; Regs used in _read_EEPROM: [wreg]
   554                           ;read_EEPROM@address stored from wreg
   555  073A  00F1               	movwf	read_EEPROM@address
   556                           
   557                           ;main.c: 76: uint8_t data ;
   558                           ;main.c: 77: EEADR = address ;
   559  073B  0871               	movf	read_EEPROM@address,w
   560  073C  1283               	bcf	3,5	;RP0=0, select bank2
   561  073D  1703               	bsf	3,6	;RP1=1, select bank2
   562  073E  008D               	movwf	13	;volatile
   563                           
   564                           ;main.c: 78: EECON1bits.EEPGD=0;
   565  073F  1683               	bsf	3,5	;RP0=1, select bank3
   566  0740  1703               	bsf	3,6	;RP1=1, select bank3
   567  0741  138C               	bcf	12,7	;volsfr
   568                           
   569                           ;main.c: 79: EECON1bits.RD=1;
   570  0742  140C               	bsf	12,0	;volsfr
   571                           
   572                           ;main.c: 80: data = EEDATA;
   573  0743  1283               	bcf	3,5	;RP0=0, select bank2
   574  0744  1703               	bsf	3,6	;RP1=1, select bank2
   575  0745  080C               	movf	12,w	;volatile
   576  0746  00F0               	movwf	??_read_EEPROM
   577  0747  0870               	movf	??_read_EEPROM,w
   578  0748  00F2               	movwf	read_EEPROM@data
   579                           
   580                           ;main.c: 81: return data ;
   581  0749  0872               	movf	read_EEPROM@data,w
   582  074A  0008               	return
   583  074B                     __end_of_read_EEPROM:	
   584  007E                     btemp	set	126	;btemp
   585  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_EEPROM
    _main->_write_EEPROM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     417
                                              3 COMMON     5     5      0
                        _read_EEPROM
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (1) _write_EEPROM                                         3     2      1     226
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _read_EEPROM                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _read_EEPROM
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jun 16 19:29:27 2020

            __CFG_CP$OFF 0000                       l48 074C                      l630 0777  
                    l618 0769                      l654 07D4                      l646 07B5  
                    l638 0796                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    u120 0768                      u217 078F                      u227 07AE  
                    u237 07CD                      u247 07F0             __CFG_CPD$OFF 0000  
           __CFG_FOSC$XT 0000              main@address 0077             __CFG_LVP$OFF 0000  
           __CFG_WRT$OFF 0000                     _main 076E                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000             ?_read_EEPROM 0070  
                  ?_main 0070                    _EEADR 010D            __CFG_WDTE$OFF 0000  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    main@i 0076    __size_of_write_EEPROM 0023  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0073             _write_EEPROM 074B  
                 _EEDATA 010C                   _EECON2 018D  __end_of__initialization 07FC  
         __pcstackCOMMON 0070     __size_of_read_EEPROM 0011       read_EEPROM@address 0071  
       write_EEPROM@data 0070               __pmaintext 076E                  __ptext1 074B  
                __ptext2 073A     end_of_initialization 07FC      write_EEPROM@address 0071  
    start_initialization 07FC    write_EEPROM@GIE_State 0072            ??_read_EEPROM 0070  
              ___latbits 0002          read_EEPROM@data 0072      __end_of_read_EEPROM 074B  
          ?_write_EEPROM 0070           ??_write_EEPROM 0071               _EECON1bits 018C  
            _read_EEPROM 073A            __size_of_main 008E               _INTCONbits 000B  
   __end_of_write_EEPROM 076E  
