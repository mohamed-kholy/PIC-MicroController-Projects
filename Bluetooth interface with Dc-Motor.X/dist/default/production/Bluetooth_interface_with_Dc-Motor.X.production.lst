

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jun 19 18:45:05 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.41
    14                           ; Generated 25/01/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  001A                     _RCREG	set	26
   108  0065                     _RCIF	set	101
   109  00C4                     _CREN	set	196
   110  005F                     _GIE	set	95
   111  005E                     _PEIE	set	94
   112  00C7                     _SPEN	set	199
   113  0039                     _RC1	set	57
   114  0031                     _RB1	set	49
   115  0030                     _RB0	set	48
   116  0099                     _SPBRG	set	153
   117  0465                     _RCIE	set	1125
   118  043F                     _TRISC7	set	1087
   119  043E                     _TRISC6	set	1086
   120  04C4                     _SYNC	set	1220
   121  04C2                     _BRGH	set	1218
   122  0439                     _TRISC1	set	1081
   123  0431                     _TRISB1	set	1073
   124  0430                     _TRISB0	set	1072
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  0015                     start_initialization:	
   130  0015                     __initialization:	
   131                           
   132                           ; Clear objects allocated to COMMON
   133  0015  01F5               	clrf	__pbssCOMMON& (0+127)
   134  0016                     end_of_initialization:	
   135                           ;End of C runtime variable initialization code
   136                           
   137  0016                     __end_of__initialization:	
   138  0016  0183               	clrf	3
   139  0017  120A  118A  283D   	ljmp	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMMON
   142  0075                     __pbssCOMMON:	
   143  0075                     _reading_value:	
   144  0075                     	ds	1
   145                           
   146                           	psect	cstackCOMMON
   147  0070                     __pcstackCOMMON:	
   148  0070                     ?_UART_Rx_Init:	
   149  0070                     ?_main:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  0070                     ?_ISR:	
   153                           ; 1 bytes @ 0x0
   154                           
   155  0070                     ??_ISR:	
   156                           ; 1 bytes @ 0x0
   157                           
   158                           
   159                           ; 1 bytes @ 0x0
   160  0070                     	ds	5
   161  0075                     ??_UART_Rx_Init:	
   162  0075                     ??_main:	
   163                           ; 1 bytes @ 0x5
   164                           
   165                           
   166                           	psect	maintext
   167  003D                     __pmaintext:	
   168                           ; 1 bytes @ 0x5
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   171 ;;
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 19 in file "main.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0, pclath, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : B00/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   188 ;;      Params:         0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0
   190 ;;      Temps:          0       0       0       0       0
   191 ;;      Totals:         0       0       0       0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; Hardware stack levels required when called:    2
   194 ;; This function calls:
   195 ;;		_UART_Rx_Init
   196 ;; This function is called by:
   197 ;;		Startup code after reset
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           
   202                           ;psect for function _main
   203  003D                     _main:	
   204                           
   205                           ;main.c: 21: UART_Rx_Init();
   206                           
   207                           ;incstack = 0
   208                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   209  003D  120A  118A  2051  120A  118A  	fcall	_UART_Rx_Init
   210                           
   211                           ;main.c: 22: TRISB0=0;
   212  0042  1683               	bsf	3,5	;RP0=1, select bank1
   213  0043  1303               	bcf	3,6	;RP1=0, select bank1
   214  0044  1006               	bcf	6,0	;volatile
   215                           
   216                           ;main.c: 23: TRISB1=0;
   217  0045  1086               	bcf	6,1	;volatile
   218                           
   219                           ;main.c: 24: RB0=0;
   220  0046  1283               	bcf	3,5	;RP0=0, select bank0
   221  0047  1303               	bcf	3,6	;RP1=0, select bank0
   222  0048  1006               	bcf	6,0	;volatile
   223                           
   224                           ;main.c: 25: RB1=0;
   225  0049  1086               	bcf	6,1	;volatile
   226                           
   227                           ;main.c: 26: TRISC1=0;
   228  004A  1683               	bsf	3,5	;RP0=1, select bank1
   229  004B  1303               	bcf	3,6	;RP1=0, select bank1
   230  004C  1087               	bcf	7,1	;volatile
   231                           
   232                           ;main.c: 27: RC1=1;
   233  004D  1283               	bcf	3,5	;RP0=0, select bank0
   234  004E  1303               	bcf	3,6	;RP1=0, select bank0
   235  004F  1487               	bsf	7,1	;volatile
   236  0050                     l43:	
   237                           ;main.c: 28: while (1){
   238                           
   239  0050  2850               	goto	l43
   240  0051                     __end_of_main:	
   241                           ;main.c: 30: }
   242                           ;main.c: 32: return;
   243                           
   244                           
   245                           	psect	text1
   246  0051                     __ptext1:	
   247 ;; *************** function _UART_Rx_Init *****************
   248 ;; Defined at:
   249 ;;		line 34 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   263 ;;      Params:         0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels used:    1
   269 ;; Hardware stack levels required when called:    1
   270 ;; This function calls:
   271 ;;		Nothing
   272 ;; This function is called by:
   273 ;;		_main
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           
   278                           ;psect for function _UART_Rx_Init
   279  0051                     _UART_Rx_Init:	
   280                           
   281                           ;main.c: 36: BRGH = 1;
   282                           
   283                           ;incstack = 0
   284                           ; Regs used in _UART_Rx_Init: [wreg]
   285  0051  1683               	bsf	3,5	;RP0=1, select bank1
   286  0052  1303               	bcf	3,6	;RP1=0, select bank1
   287  0053  1518               	bsf	24,2	;volatile
   288                           
   289                           ;main.c: 37: SPBRG = 25;
   290  0054  3019               	movlw	25
   291  0055  0099               	movwf	25	;volatile
   292                           
   293                           ;main.c: 38: SYNC = 0;
   294  0056  1218               	bcf	24,4	;volatile
   295                           
   296                           ;main.c: 39: SPEN = 1;
   297  0057  1283               	bcf	3,5	;RP0=0, select bank0
   298  0058  1303               	bcf	3,6	;RP1=0, select bank0
   299  0059  1798               	bsf	24,7	;volatile
   300                           
   301                           ;main.c: 40: TRISC6 = 1;
   302  005A  1683               	bsf	3,5	;RP0=1, select bank1
   303  005B  1303               	bcf	3,6	;RP1=0, select bank1
   304  005C  1707               	bsf	7,6	;volatile
   305                           
   306                           ;main.c: 41: TRISC7 = 1;
   307  005D  1787               	bsf	7,7	;volatile
   308                           
   309                           ;main.c: 42: RCIE = 1 ;
   310  005E  168C               	bsf	12,5	;volatile
   311                           
   312                           ;main.c: 43: PEIE = 1 ;
   313  005F  170B               	bsf	11,6	;volatile
   314                           
   315                           ;main.c: 44: GIE =1 ;
   316  0060  178B               	bsf	11,7	;volatile
   317                           
   318                           ;main.c: 45: CREN = 1;
   319  0061  1283               	bcf	3,5	;RP0=0, select bank0
   320  0062  1303               	bcf	3,6	;RP1=0, select bank0
   321  0063  1618               	bsf	24,4	;volatile
   322  0064  0008               	return
   323  0065                     __end_of_UART_Rx_Init:	
   324                           
   325                           	psect	text2
   326  001A                     __ptext2:	
   327 ;; *************** function _ISR *****************
   328 ;; Defined at:
   329 ;;		line 51 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0
   345 ;;      Temps:          5       0       0       0       0
   346 ;;      Totals:         5       0       0       0       0
   347 ;;Total ram usage:        5 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		Interrupt level 1
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           
   357                           ;psect for function _ISR
   358  001A                     _ISR:	
   359                           
   360                           ;main.c: 52: if (RCIF==1) {
   361  001A  1E8C               	btfss	12,5	;volatile
   362  001B  2832               	goto	i1l56
   363                           
   364                           ;main.c: 53: reading_value=RCREG;
   365  001C  081A               	movf	26,w	;volatile
   366  001D  00F0               	movwf	??_ISR
   367  001E  0870               	movf	??_ISR,w
   368  001F  00F5               	movwf	_reading_value
   369                           
   370                           ;main.c: 54: if (reading_value==49)
   371  0020  3031               	movlw	49
   372  0021  0675               	xorwf	_reading_value,w
   373  0022  1D03               	btfss	3,2
   374  0023  2826               	goto	i1l558
   375                           
   376                           ;main.c: 55: {
   377                           ;main.c: 57: RB0=0;
   378  0024  1006               	bcf	6,0	;volatile
   379                           
   380                           ;main.c: 58: RB1=1;
   381  0025  1486               	bsf	6,1	;volatile
   382  0026                     i1l558:	
   383                           
   384                           ;main.c: 60: }
   385                           ;main.c: 61: if (reading_value==50)
   386  0026  3032               	movlw	50
   387  0027  0675               	xorwf	_reading_value,w
   388  0028  1D03               	btfss	3,2
   389  0029  282C               	goto	i1l562
   390                           
   391                           ;main.c: 62: {
   392                           ;main.c: 63: RB0=1;
   393  002A  1406               	bsf	6,0	;volatile
   394                           
   395                           ;main.c: 64: RB1=0;
   396  002B  1086               	bcf	6,1	;volatile
   397  002C                     i1l562:	
   398                           
   399                           ;main.c: 65: }
   400                           ;main.c: 66: if (reading_value==51)
   401  002C  3033               	movlw	51
   402  002D  0675               	xorwf	_reading_value,w
   403  002E  1D03               	btfss	3,2
   404  002F  2832               	goto	i1l56
   405                           
   406                           ;main.c: 67: {
   407                           ;main.c: 68: RB0=1;
   408  0030  1406               	bsf	6,0	;volatile
   409                           
   410                           ;main.c: 69: RB1=1;
   411  0031  1486               	bsf	6,1	;volatile
   412  0032                     i1l56:	
   413  0032  0874               	movf	??_ISR+4,w
   414  0033  00FF               	movwf	127
   415  0034  0873               	movf	??_ISR+3,w
   416  0035  008A               	movwf	10
   417  0036  0872               	movf	??_ISR+2,w
   418  0037  0084               	movwf	4
   419  0038  0E71               	swapf	(??_ISR+1)^(0+-128),w
   420  0039  0083               	movwf	3
   421  003A  0EFE               	swapf	126,f
   422  003B  0E7E               	swapf	126,w
   423  003C  0009               	retfie
   424  003D                     __end_of_ISR:	
   425  007E                     btemp	set	126	;btemp
   426  007E                     wtemp0	set	126
   427                           
   428                           	psect	intentry
   429  0004                     __pintentry:	
   430                           ;incstack = 0
   431                           ; Regs used in _ISR: [wreg+status,2+status,0]
   432                           
   433  0004                     interrupt_function:	
   434  007E                     saved_w	set	btemp
   435  0004  00FE               	movwf	btemp
   436  0005  0E03               	swapf	3,w
   437  0006  00F1               	movwf	??_ISR+1
   438  0007  0804               	movf	4,w
   439  0008  00F2               	movwf	??_ISR+2
   440  0009  080A               	movf	10,w
   441  000A  00F3               	movwf	??_ISR+3
   442  000B  1283               	bcf	3,5	;RP0=0, select bank0
   443  000C  1303               	bcf	3,6	;RP1=0, select bank0
   444  000D  087F               	movf	btemp+1,w
   445  000E  00F4               	movwf	??_ISR+4
   446  000F  120A  118A  281A   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _UART_Rx_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Rx_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Rx_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jun 19 18:45:05 2020

            __CFG_CP$OFF 0000                       l43 0050                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RC1 0039  
           __CFG_CPD$OFF 0000                      _ISR 001A                      fsr0 0004  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   _BRGH 04C2                     _CREN 00C4                     _PEIE 005E  
                   _RCIE 0465                     _RCIF 0065                     i1l56 0032  
                   _SPEN 00C7                     _SYNC 04C4             __CFG_WRT$OFF 0000  
                   _main 003D                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0012                    ??_ISR 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    i1l562 002C                    i1l558 0026  
                  _RCREG 001A                    _SPBRG 0099            __CFG_PWRTE$ON 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0051                   ??_main 0075  
                 _TRISB0 0430                   _TRISB1 0431                   _TRISC1 0439  
                 _TRISC6 043E                   _TRISC7 043F                   saved_w 007E  
__end_of__initialization 0016           __pcstackCOMMON 0070               __pmaintext 003D  
             __pintentry 0004            _reading_value 0075            ?_UART_Rx_Init 0070  
                __ptext1 0051                  __ptext2 001A             __size_of_ISR 0023  
   end_of_initialization 0016           ??_UART_Rx_Init 0075      start_initialization 0015  
            __end_of_ISR 003D     __end_of_UART_Rx_Init 0065              __pbssCOMMON 0075  
              ___latbits 0002        interrupt_function 0004    __size_of_UART_Rx_Init 0014  
          __size_of_main 0014             _UART_Rx_Init 0051                 intlevel1 0000  
