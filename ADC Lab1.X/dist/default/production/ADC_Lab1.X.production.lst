

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jul 03 16:16:30 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.41
    14                           ; Generated 25/01/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  001E                     _ADRESH	set	30
   108  001F                     _ADCON0bits	set	31
   109  001F                     _ADCON0	set	31
   110  0015                     _CCPR1L	set	21
   111  00FA                     _GO_DONE	set	250
   112  005F                     _GIE	set	95
   113  005E                     _PEIE	set	94
   114  0066                     _ADIF	set	102
   115  00F8                     _ADON	set	248
   116  00FB                     _CHS0	set	251
   117  00FC                     _CHS1	set	252
   118  00FD                     _CHS2	set	253
   119  00FF                     _ADCS1	set	255
   120  00FE                     _ADCS0	set	254
   121  00BD                     _CCP1X	set	189
   122  00BC                     _CCP1Y	set	188
   123  0092                     _TMR2ON	set	146
   124  0091                     _T2CKPS1	set	145
   125  0090                     _T2CKPS0	set	144
   126  00BA                     _CCP1M2	set	186
   127  00BB                     _CCP1M3	set	187
   128  003A                     _RC2	set	58
   129  009E                     _ADRESL	set	158
   130  0092                     _PR2	set	146
   131  0466                     _ADIE	set	1126
   132  04FF                     _ADFM	set	1279
   133  04FE                     _ADCS2	set	1278
   134  04F8                     _PCFG0	set	1272
   135  04F9                     _PCFG1	set	1273
   136  04FA                     _PCFG2	set	1274
   137  04FB                     _PCFG3	set	1275
   138  043A                     _TRISC2	set	1082
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  07FC                     start_initialization:	
   144  07FC                     __initialization:	
   145  07FC                     end_of_initialization:	
   146                           ;End of C runtime variable initialization code
   147                           
   148  07FC                     __end_of__initialization:	
   149  07FC  0183               	clrf	3
   150  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   151                           
   152                           	psect	cstackCOMMON
   153  0070                     __pcstackCOMMON:	
   154  0070                     ?_PWM1_Init:	
   155  0070                     ??_PWM1_Init:	
   156                           ; 1 bytes @ 0x0
   157                           
   158  0070                     ?_ADC_Init:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  0070                     ??_ADC_Init:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ?_main:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ?_ADC_Read:	
   168                           ; 1 bytes @ 0x0
   169                           
   170                           
   171                           ; 2 bytes @ 0x0
   172  0070                     	ds	2
   173  0072                     ??_ADC_Read:	
   174                           
   175                           ; 1 bytes @ 0x2
   176  0072                     	ds	2
   177  0074                     ADC_Read@ANC:	
   178                           
   179                           ; 1 bytes @ 0x4
   180  0074                     	ds	1
   181  0075                     ?_Set_duty_cycle:	
   182  0075                     Set_duty_cycle@DC:	
   183                           ; 1 bytes @ 0x5
   184                           
   185                           
   186                           ; 2 bytes @ 0x5
   187  0075                     	ds	2
   188  0077                     ??_Set_duty_cycle:	
   189                           
   190                           ; 1 bytes @ 0x7
   191  0077                     	ds	2
   192  0079                     ??_main:	
   193                           
   194                           ; 1 bytes @ 0x9
   195  0079                     	ds	1
   196                           
   197                           	psect	maintext
   198  07AF                     __pmaintext:	
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 19 in file "main.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2, status,0, pclath, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : B00/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   218 ;;      Params:         0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0
   220 ;;      Temps:          1       0       0       0       0
   221 ;;      Totals:         1       0       0       0       0
   222 ;;Total ram usage:        1 bytes
   223 ;; Hardware stack levels required when called:    1
   224 ;; This function calls:
   225 ;;		_ADC_Init
   226 ;;		_ADC_Read
   227 ;;		_PWM1_Init
   228 ;;		_Set_duty_cycle
   229 ;; This function is called by:
   230 ;;		Startup code after reset
   231 ;; This function uses a non-reentrant model
   232 ;;
   233                           
   234                           
   235                           ;psect for function _main
   236  07AF                     _main:	
   237                           
   238                           ;main.c: 20: PWM1_Init();
   239                           
   240                           ;incstack = 0
   241                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   242  07AF  120A  118A  2760  120A  118A  	fcall	_PWM1_Init
   243                           
   244                           ;main.c: 21: ADC_Init() ;
   245  07B4  120A  118A  2790  120A  118A  	fcall	_ADC_Init
   246  07B9                     l625:	
   247                           ;main.c: 22: while (1) {
   248                           
   249                           
   250                           ;main.c: 23: Set_duty_cycle(ADC_Read (0));
   251  07B9  3000               	movlw	0
   252  07BA  120A  118A  27D0  120A  118A  	fcall	_ADC_Read
   253  07BF  0871               	movf	?_ADC_Read+1,w
   254  07C0  00F6               	movwf	Set_duty_cycle@DC+1
   255  07C1  0870               	movf	?_ADC_Read,w
   256  07C2  00F5               	movwf	Set_duty_cycle@DC
   257  07C3  120A  118A  2772  120A  118A  	fcall	_Set_duty_cycle
   258                           
   259                           ;main.c: 24: _delay((unsigned long)((1)*(4000000/4000.0)));
   260  07C8  30C7               	movlw	199
   261  07C9  00F9               	movwf	??_main
   262  07CA                     u137:	
   263  07CA  2FCB               	nop2
   264  07CB  0BF9               	decfsz	??_main,f
   265  07CC  2FCA               	goto	u137
   266  07CD  2FCE               	nop2
   267  07CE  2FCF               	nop2
   268  07CF  2FB9               	goto	l625
   269  07D0                     __end_of_main:	
   270                           ;main.c: 26: }
   271                           ;main.c: 27: return;
   272                           
   273                           
   274                           	psect	text1
   275  0772                     __ptext1:	
   276 ;; *************** function _Set_duty_cycle *****************
   277 ;; Defined at:
   278 ;;		line 45 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;  DC              2    5[COMMON] unsigned int 
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0
   287 ;; Tracked objects:
   288 ;;		On entry : 0/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         2       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          2       0       0       0       0
   295 ;;      Totals:         4       0       0       0       0
   296 ;;Total ram usage:        4 bytes
   297 ;; Hardware stack levels used:    1
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		_main
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           
   306                           ;psect for function _Set_duty_cycle
   307  0772                     _Set_duty_cycle:	
   308                           
   309                           ;main.c: 46: if (DC < 1024) {
   310                           
   311                           ;incstack = 0
   312                           ; Regs used in _Set_duty_cycle: [wreg+status,2+status,0]
   313  0772  3004               	movlw	4
   314  0773  0276               	subwf	Set_duty_cycle@DC+1,w
   315  0774  3000               	movlw	0
   316  0775  1903               	skipnz
   317  0776  0275               	subwf	Set_duty_cycle@DC,w
   318  0777  1803               	skipnc
   319  0778  0008               	return
   320                           
   321                           ;main.c: 47: CCP1Y = DC& 1 ;
   322  0779  1C75               	btfss	Set_duty_cycle@DC,0
   323  077A  2F7F               	goto	u110
   324  077B  1283               	bcf	3,5	;RP0=0, select bank0
   325  077C  1303               	bcf	3,6	;RP1=0, select bank0
   326  077D  1617               	bsf	23,4	;volatile
   327  077E  2F82               	goto	u124
   328  077F                     u110:	
   329  077F  1283               	bcf	3,5	;RP0=0, select bank0
   330  0780  1303               	bcf	3,6	;RP1=0, select bank0
   331  0781  1217               	bcf	23,4	;volatile
   332  0782                     u124:	
   333                           
   334                           ;main.c: 48: CCP1X= DC&2 ;
   335  0782  1297               	bcf	23,5	;volatile
   336                           
   337                           ;main.c: 49: CCPR1L = DC >> 2 ;
   338  0783  0876               	movf	Set_duty_cycle@DC+1,w
   339  0784  00F8               	movwf	??_Set_duty_cycle+1
   340  0785  0875               	movf	Set_duty_cycle@DC,w
   341  0786  00F7               	movwf	??_Set_duty_cycle
   342  0787  1003               	clrc
   343  0788  0CF8               	rrf	??_Set_duty_cycle+1,f
   344  0789  0CF7               	rrf	??_Set_duty_cycle,f
   345  078A  1003               	clrc
   346  078B  0CF8               	rrf	??_Set_duty_cycle+1,f
   347  078C  0CF7               	rrf	??_Set_duty_cycle,f
   348  078D  0877               	movf	??_Set_duty_cycle,w
   349  078E  0095               	movwf	21	;volatile
   350  078F  0008               	return
   351  0790                     __end_of_Set_duty_cycle:	
   352                           
   353                           	psect	text2
   354  0760                     __ptext2:	
   355 ;; *************** function _PWM1_Init *****************
   356 ;; Defined at:
   357 ;;		line 30 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _PWM1_Init
   386  0760                     _PWM1_Init:	
   387                           
   388                           ;main.c: 32: TRISC2=0;
   389                           
   390                           ;incstack = 0
   391                           ; Regs used in _PWM1_Init: [wreg]
   392  0760  1683               	bsf	3,5	;RP0=1, select bank1
   393  0761  1303               	bcf	3,6	;RP1=0, select bank1
   394  0762  1107               	bcf	7,2	;volatile
   395                           
   396                           ;main.c: 33: RC2=0;
   397  0763  1283               	bcf	3,5	;RP0=0, select bank0
   398  0764  1303               	bcf	3,6	;RP1=0, select bank0
   399  0765  1107               	bcf	7,2	;volatile
   400                           
   401                           ;main.c: 35: CCP1M3=1;
   402  0766  1597               	bsf	23,3	;volatile
   403                           
   404                           ;main.c: 36: CCP1M2=1;
   405  0767  1517               	bsf	23,2	;volatile
   406                           
   407                           ;main.c: 38: PR2=124;
   408  0768  307C               	movlw	124
   409  0769  1683               	bsf	3,5	;RP0=1, select bank1
   410  076A  1303               	bcf	3,6	;RP1=0, select bank1
   411  076B  0092               	movwf	18	;volatile
   412                           
   413                           ;main.c: 40: T2CKPS0=1;
   414  076C  1283               	bcf	3,5	;RP0=0, select bank0
   415  076D  1303               	bcf	3,6	;RP1=0, select bank0
   416  076E  1412               	bsf	18,0	;volatile
   417                           
   418                           ;main.c: 41: T2CKPS1=0;
   419  076F  1092               	bcf	18,1	;volatile
   420                           
   421                           ;main.c: 43: TMR2ON=1;
   422  0770  1512               	bsf	18,2	;volatile
   423  0771  0008               	return
   424  0772                     __end_of_PWM1_Init:	
   425                           
   426                           	psect	text3
   427  07D0                     __ptext3:	
   428 ;; *************** function _ADC_Read *****************
   429 ;; Defined at:
   430 ;;		line 78 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;  ANC             1    wreg     unsigned char 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  ANC             1    4[COMMON] unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  2    0[COMMON] unsigned int 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         2       0       0       0       0
   445 ;;      Locals:         1       0       0       0       0
   446 ;;      Temps:          2       0       0       0       0
   447 ;;      Totals:         5       0       0       0       0
   448 ;;Total ram usage:        5 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _ADC_Read
   459  07D0                     _ADC_Read:	
   460                           
   461                           ;incstack = 0
   462                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   463                           ;ADC_Read@ANC stored from wreg
   464  07D0  00F4               	movwf	ADC_Read@ANC
   465                           
   466                           ;main.c: 80: if(ANC<0 || ANC>7)
   467  07D1  3008               	movlw	8
   468  07D2  0274               	subwf	ADC_Read@ANC,w
   469  07D3  1C03               	skipc
   470  07D4  2FD8               	goto	l605
   471                           
   472                           ;main.c: 81: { return 0;}
   473  07D5  01F0               	clrf	?_ADC_Read
   474  07D6  01F1               	clrf	?_ADC_Read+1
   475  07D7  0008               	return
   476  07D8                     l605:	
   477                           
   478                           ;main.c: 82: ADCON0 &= 0b11000101;
   479  07D8  30C5               	movlw	197
   480  07D9  00F2               	movwf	??_ADC_Read
   481  07DA  0872               	movf	??_ADC_Read,w
   482  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   483  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   484  07DD  059F               	andwf	31,f	;volatile
   485                           
   486                           ;main.c: 83: ADCON0 |= ANC<<3;
   487  07DE  0874               	movf	ADC_Read@ANC,w
   488  07DF  00F2               	movwf	??_ADC_Read
   489  07E0  3002               	movlw	2
   490  07E1                     u85:	
   491  07E1  1003               	clrc
   492  07E2  0DF2               	rlf	??_ADC_Read,f
   493  07E3  3EFF               	addlw	-1
   494  07E4  1D03               	skipz
   495  07E5  2FE1               	goto	u85
   496  07E6  1003               	clrc
   497  07E7  0D72               	rlf	??_ADC_Read,w
   498  07E8  00F3               	movwf	??_ADC_Read+1
   499  07E9  0873               	movf	??_ADC_Read+1,w
   500  07EA  049F               	iorwf	31,f	;volatile
   501                           
   502                           ;main.c: 85: _delay((unsigned long)((30)*(4000000/4000000.0)));
   503  07EB  3009               	movlw	9
   504  07EC  00F2               	movwf	??_ADC_Read
   505  07ED                     u147:	
   506  07ED  0BF2               	decfsz	??_ADC_Read,f
   507  07EE  2FED               	goto	u147
   508  07EF  2FF0               	nop2
   509                           
   510                           ;main.c: 86: GO_DONE = 1;
   511  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   512  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   513  07F2  151F               	bsf	31,2	;volatile
   514  07F3                     l95:	
   515                           ;main.c: 87: while(ADCON0bits.GO_DONE);
   516                           
   517  07F3  191F               	btfsc	31,2	;volatile
   518  07F4  2FF3               	goto	l95
   519                           
   520                           ;main.c: 89: return ((ADRESH << 8) + ADRESL);
   521  07F5  081E               	movf	30,w	;volatile
   522  07F6  00F1               	movwf	?_ADC_Read+1
   523  07F7  1683               	bsf	3,5	;RP0=1, select bank1
   524  07F8  1303               	bcf	3,6	;RP1=0, select bank1
   525  07F9  081E               	movf	30,w	;volatile
   526  07FA  00F0               	movwf	?_ADC_Read
   527  07FB  0008               	return
   528  07FC                     __end_of_ADC_Read:	
   529                           
   530                           	psect	text4
   531  0790                     __ptext4:	
   532 ;; *************** function _ADC_Init *****************
   533 ;; Defined at:
   534 ;;		line 53 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		None
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _ADC_Init
   563  0790                     _ADC_Init:	
   564                           
   565                           ;main.c: 56: PCFG3 = 0 ;
   566                           
   567                           ;incstack = 0
   568                           ; Regs used in _ADC_Init: []
   569  0790  1683               	bsf	3,5	;RP0=1, select bank1
   570  0791  1303               	bcf	3,6	;RP1=0, select bank1
   571  0792  119F               	bcf	31,3	;volatile
   572                           
   573                           ;main.c: 57: PCFG2 = 0 ;
   574  0793  111F               	bcf	31,2	;volatile
   575                           
   576                           ;main.c: 58: PCFG1 = 0 ;
   577  0794  109F               	bcf	31,1	;volatile
   578                           
   579                           ;main.c: 59: PCFG0 = 0 ;
   580  0795  101F               	bcf	31,0	;volatile
   581                           
   582                           ;main.c: 61: ADCS0 = 1 ;
   583  0796  1283               	bcf	3,5	;RP0=0, select bank0
   584  0797  1303               	bcf	3,6	;RP1=0, select bank0
   585  0798  171F               	bsf	31,6	;volatile
   586                           
   587                           ;main.c: 62: ADCS1 = 0 ;
   588  0799  139F               	bcf	31,7	;volatile
   589                           
   590                           ;main.c: 63: ADCS2 = 0 ;
   591  079A  1683               	bsf	3,5	;RP0=1, select bank1
   592  079B  1303               	bcf	3,6	;RP1=0, select bank1
   593  079C  131F               	bcf	31,6	;volatile
   594                           
   595                           ;main.c: 65: CHS2 = 0 ;
   596  079D  1283               	bcf	3,5	;RP0=0, select bank0
   597  079E  1303               	bcf	3,6	;RP1=0, select bank0
   598  079F  129F               	bcf	31,5	;volatile
   599                           
   600                           ;main.c: 66: CHS1 = 0 ;
   601  07A0  121F               	bcf	31,4	;volatile
   602                           
   603                           ;main.c: 67: CHS0 = 0 ;
   604  07A1  119F               	bcf	31,3	;volatile
   605                           
   606                           ;main.c: 69: ADON = 1 ;
   607  07A2  141F               	bsf	31,0	;volatile
   608                           
   609                           ;main.c: 71: ADFM = 1 ;
   610  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   611  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   612  07A5  179F               	bsf	31,7	;volatile
   613                           
   614                           ;main.c: 73: ADIF = 0;
   615  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   616  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   617  07A8  130C               	bcf	12,6	;volatile
   618                           
   619                           ;main.c: 74: ADIE = 1;
   620  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   621  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   622  07AB  170C               	bsf	12,6	;volatile
   623                           
   624                           ;main.c: 75: PEIE = 1;
   625  07AC  170B               	bsf	11,6	;volatile
   626                           
   627                           ;main.c: 76: GIE = 1;
   628  07AD  178B               	bsf	11,7	;volatile
   629  07AE  0008               	return
   630  07AF                     __end_of_ADC_Init:	
   631  007E                     btemp	set	126	;btemp
   632  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Set_duty_cycle
    _Set_duty_cycle->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     163
                                              9 COMMON     1     1      0
                           _ADC_Init
                           _ADC_Read
                          _PWM1_Init
                     _Set_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _Set_duty_cycle                                       4     2      2     119
                                              5 COMMON     4     2      2
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _PWM1_Init
   _Set_duty_cycle
     _ADC_Read (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jul 03 16:16:30 2020

            __CFG_CP$OFF 0000                       l95 07F3                       u85 07E1  
                    l605 07D8                      l625 07B9                      _GIE 005F  
                    _RC2 003A                      u110 077F                      u124 0782  
                    u137 07CA                      u147 07ED                      _PR2 0092  
           __CFG_CPD$OFF 0000             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   _ADIE 0466                     _ADIF 0066                     _ADFM 04FF  
                   _ADON 00F8                     _CHS0 00FB                     _CHS1 00FC  
                   _CHS2 00FD                     _PEIE 005E             __CFG_WRT$OFF 0000  
                   _main 07AF                     btemp 007E         __end_of_ADC_Init 07AF  
       __end_of_ADC_Read 07FC            __CFG_BOREN$ON 0000                     start 0000  
                  _ADCS0 00FE                    _ADCS1 00FF                    _ADCS2 04FE  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
          __CFG_WDTE$OFF 0000                    _PCFG0 04F8                    _PCFG1 04F9  
                  _PCFG2 04FA                    _PCFG3 04FB            __CFG_PWRTE$ON 0000  
     __size_of_PWM1_Init 0012                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07D0                   ??_main 0079  
         _Set_duty_cycle 0772                   _ADCON0 001F                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _TMR2ON 0092                   _TRISC2 043A  
      __end_of_PWM1_Init 0772   __end_of_Set_duty_cycle 0790                ?_ADC_Init 0070  
              ?_ADC_Read 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
        ?_Set_duty_cycle 0075               ??_ADC_Init 0070               ??_ADC_Read 0072  
             __pmaintext 07AF                  _T2CKPS0 0090                  _T2CKPS1 0091  
                _GO_DONE 00FA                  __ptext1 0772                  __ptext2 0760  
                __ptext3 07D0                  __ptext4 0790     end_of_initialization 07FC  
       Set_duty_cycle@DC 0075                _PWM1_Init 0760        __size_of_ADC_Init 001F  
      __size_of_ADC_Read 002C         ??_Set_duty_cycle 0077               ?_PWM1_Init 0070  
    start_initialization 07FC                ___latbits 0002              ??_PWM1_Init 0070  
               _ADC_Init 0790                 _ADC_Read 07D0              ADC_Read@ANC 0074  
             _ADCON0bits 001F            __size_of_main 0021  __size_of_Set_duty_cycle 001E  
